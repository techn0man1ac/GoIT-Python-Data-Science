import re

text = "Вивчення Python може бути веселим. Python - потужний інтрумент для роботи з автоматизацією."
pattern = "Python"
match = re.search(pattern, text)

if match:
    print("Знайдено:", match.group()) # Знайдено: Python
else:
    print("Не знайдено.")

pattern = r"в\w*м"
match = re.search(pattern, text, re.IGNORECASE)

if match:
    print("Знайдено:", match.group()) # Знайдено: веселим

'''
Тут змінна pattern зберігає регулярний вираз r"в\w*м":

r означає "сирий" рядок (raw string), який каже Python 
ігнорувати спеціальні символи такі як \n, \t тощо, оскільки це рядок для регулярних виразів.
в - шукаємо слово яке починається на букву "в".
\w* - це означає будь-яка кількість букв включно з нулем букв. 
Бо \w відповідає будь-якому "словесному" символу, а * є квантифікатором, 
який означає "нуль або більше входжень попереднього елемента".
м - шукаємо слово яке закінчується на "м".

В функцію search ми передаємо параметр re.IGNORECASE, 
який робить пошук нечутливим до регістру. 
А отже слово може бути як з великих так і малих літер.
'''

text = "Моя електронна адреса: example@example.com"
pattern = r"\w+@\w+\.\w+"
match = re.search(pattern, text)

if match:
    print("Електронна адреса:", match.group()) #Електронна адреса: example@example.com

#-----------------------------------

email = "username1@domain.com"
pattern = r"(\w+)@(\w+\.\w+)"
match = re.search(pattern, email) 

if match:
    user_name = match.group(1)
    domain_name = match.group(2)
    print("Ім'я користувача:", user_name) # Ім'я користувача: username1
    print("Домен:", domain_name) # Домен: domain.com

'''
Давайте трошки пояснення, що тут відбулося. 
Головне це наш регулярний вираз (\w+)@(\w+\.\w+). 
Перші круглі дужки (\w+) відповідають одному або 
більше словесним символам. Це група збігається з 
ім'ям користувача електронної адреси. 
Далі в нас відбувається пошук @ - символ, 
що розділяє ім'я користувача та домен. 
Він нам не потрібний і в дужки ми його не беремо. 
Другі круглі дужки (\w+\.\w+) відповідають за домену електронної адреси. 
Тут \w+ збігається з першою частиною домену, \. - це крапка, 
і ще один \w+ для збігу з доменом верхнього рівня (наприклад, "com").

Коли re.search() знаходить відповідність, 
вона повертає об'єкт Match. Методи match.group(1) та match.group(2) 
використовуються для вилучення тексту, 
що відповідає кожній групі в шаблоні.
'''